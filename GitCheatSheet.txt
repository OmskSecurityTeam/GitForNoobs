-=Первоначальная настройка=-

	git config --global user.name ("Имя_пользователя") - указать имя текущего пользователя

	git config --global user.email ("Почта") - указать почту текущего пользователя

	git config --list  - вывести все настройки конфига

-=Индексирование файлов, отслеживание изменений=-

	git add (имя_файлов) - проиндексирует новые файлы + измененные (" . "  "--all" добавить все фалы)

	git status - покажет неотслеживаемые файлы + измененные файлы + текущую ветку (либо git branch)

	git diff - покажет, что конкретно изменилось

	git commit -m ("Комментарий") - закоммитить(создать снимок проидексированных файлов в рвбочеей директории) изменения, указав комментарий

	git log --graph --all --decorate --oneline - вывести лог изменений (--graph показать в виде графа, --all покажет для всех веток, --decoreate раскрасит указатели, --oneline выведет в одну строку без лишней информации)

-=Удаленный репозиторий=-

	git clone (https://расположение_удаленного_репозитория) - клонирование удаленного репозитория

	git remote add (имя_репозитория) (https://расположение_удаленного_репозитория) - добавление удаленного репозитория

	git remote -v - список текущих удаленных репозиториев с сокращенными именами

	git push -u (имя_репозиторя) (имя _ветки) - залить на удаленный репозиторий

	git clone (https://расположение_удаленного_репозитория) - клонирование удаленного репозитория

-=Работа с ветками=-

	git brunch (имя _ветки) - создать ветку

	git chekout  (имя _ветки) - перейти в указанную ветку

	git merge (имя _ветки) - слить текущую ветку с указанной (до ==== то что в указанной ветке, после то что в текущей)

	git fetch (имя_удаленного_репозитория) - клонировать себе все, что есть на сервере в данной ветке но нет в текущей локальной ветке

	git pull - аналогична последовательности команд get fetch + get merge

	git checkout -b (имя_ветки) (удаленный_реп/имя_ветки) - все push и pull из этой ветки будут делаться с указанной удаленной веткой (по факту прямое ответвление от указанной ветки)

	git push (удаленный репозиторий) :(имя_ветки) - удалить ветку на удаленном репозитории

	git branch -d (имя_ветки) - удалить ветку

-=Переход между коммитами=-

	git stash - сохранить текущие состояние, без коммита

	git stash list - список сохраненных состояний

	git stash apply [имя_состояния] - перейти к указанному состоянию (без указания состояния перейдет к последнему сохраненному)

	git stash drop [имя_состояния] - удалить состояние  (без указания состояния удалит последнее сохраненное)

	git reset [имя_коммита] - переход к указанному коммиту (удалит текщий коммит)

	git log --graph --all - вывести список коммитов